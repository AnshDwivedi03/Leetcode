Q. No.->1043. Partition Array for Maximum Sum
Ans->
class Solution {
public:
    int Solve(vector<int>& arr, int k, int i, vector<int>& dp){
        int n = arr.size();
        if(i==n)  return 0;
        if(dp[i] != -1)
        return dp[i];
        int len = 0;
        int maxi = INT_MIN;
        int maxAns = INT_MIN;
        for(int j=i; j<min(n,i+k); j++){
            len++;
            maxi = max(arr[j], maxi);
            int sum = len*maxi + Solve(arr,k, j+1, dp);
            maxAns = max(maxAns, sum);
        }
        return dp[i] = maxAns;
    }

    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        int n = arr.size();
        vector<int> dp(n, -1);
        return Solve(arr, k, 0,dp);
    }
};
