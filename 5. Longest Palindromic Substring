Q.No.-> 5. Longest Palindromic Substring
Ans->
class Solution {
public:
int dp[1001][1001];
bool solve(int st, int e, string &s){
if(st>=e){
    return 1;
}
if( dp[st][e] !=-1){
    return dp[st][e];
}
if(s[st]==s[e]){
   return dp[st][e]= solve(st+1,e-1,s);
}
return dp[st][e]=false;
}
    string longestPalindrome(string s) {
        int ans= 0;
        int st=0;
        //memset(dp, -1, sizeof(dp)); line is used to fill the entire dp array with the value -1. 
      memset(dp,-1,sizeof(dp));
        for(int i=0;i<s.length();i++){
            for( int j=i;j<s.length();j++){
                if(solve(i,j,s)){
                    if(j-i+1>ans){
                        st=i;
                        ans=j-i+1;

                    }

                }
            }

        }
        return s.substr(st,ans);
    }
};
